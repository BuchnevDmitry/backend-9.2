# Перенаправление всего HTTP-трафика на HTTPS
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;
    return 301 https://$host$request_uri;

}

# Общие настройки для HTTPS
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name _;

    ssl_certificate /etc/letsencrypt/live/rentool36.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/rentool36.ru/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Основной root и настройки по умолчанию
    root /var/www/build;
    index index.html index.htm index.nginx-debian.html;

    location / {
        try_files $uri $uri/ /index.html;
    }
}

# Конфигурация для api.rentool36.ru
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name api.rentool36.ru www.api.rentool36.ru;

    ssl_certificate /etc/letsencrypt/live/rentool36.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/rentool36.ru/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    
    location /api {
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
	
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
        add_header Access-Control-Allow-Credentials true;
	
        if ($request_method = 'OPTIONS') {
            return 204;
        }

        location /api/v1 {
	    proxy_pass http://kong;
        }
    }
}

# Конфигурация для auth.rentool36.ru
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name auth.rentool36.ru;

    ssl_certificate /etc/letsencrypt/live/rentool36.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/rentool36.ru/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
	proxy_redirect off;        
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;

	proxy_pass http://keycloak;
        
    }
}

# Конфигурация для api-tool.rentool36.ru
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name api-tool.rentool36.ru;

    ssl_certificate /etc/letsencrypt/live/rentool36.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/rentool36.ru/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {

	proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
	
	add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
        add_header Access-Control-Allow-Credentials true;
	        
        if ($request_method = 'OPTIONS') {
            return 204;
        }

	proxy_pass http://tool;
        
    }

}


# Конфигурация для api-rent.rentool36.ru
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name api-rent.rentool36.ru;

    ssl_certificate /etc/letsencrypt/live/rentool36.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/rentool36.ru/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
	proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
	
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE,  OPTIONS";
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
        add_header Access-Control-Allow-Credentials true;

        if ($request_method = 'OPTIONS') {
            return 204;
        }


        proxy_pass http://rent;
    }
}


# Конфигурация для api-user.rentool36.ru
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name api-user.rentool36.ru;

    ssl_certificate /etc/letsencrypt/live/rentool36.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/rentool36.ru/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
	proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
	
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
        add_header Access-Control-Allow-Credentials true;

        if ($request_method = 'OPTIONS') {
            return 204;
        }
        proxy_pass http://user;
    }
}

# Конфигурация для cdn.rentool36.ru
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name cdn.rentool36.ru;

    ssl_certificate /etc/letsencrypt/live/rentool36.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/rentool36.ru/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
	proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_pass http://minio;
    }
}


# Перенаправление для rentool36.ru
server {
    listen 80;
    listen [::]:80;
    server_name rentool36.ru api.rentool36.ru;
    return 301 https://$host$request_uri;
}


#server {
#    if ($host = api.rentool36.ru) {
#        return 301 https://$host$request_uri;
#    } # managed by Certbot
#
#
#    if ($host = rentool36.ru) {
#        return 301 https://$host$request_uri;
#    } # managed by Certbot
#
#
#    listen 80;
#    listen [::]:80;
#    server_name rentool36.ru api.rentool36.ru;
#    return 404; # managed by Certbot
#
#
#
#
#}
#server {
#    if ($host = cdn.rentool36.ru) {
#        return 301 https://$host$request_uri;
#    } # managed by Certbot
#
#
#    if ($host = api-tool.rentool36.ru) {
#        return 301 https://$host$request_uri;
#    } # managed by Certbot
#
#
#    if ($host = api-user.rentool36.ru) {
#        return 301 https://$host$request_uri;
#    } # managed by Certbot
#
#
#    if ($host = api-rent.rentool36.ru) {
#        return 301 https://$host$request_uri;
#    } # managed by Certbot
#
#
#    if ($host = auth.rentool36.ru) {
#        return 301 https://$host$request_uri;
#    } # managed by Certbot
#
#
#    listen 80 ;
#    listen [::]:80 ;
#    server_name api-rent.rentool36.ru api-user.rentool36.ru api-tool.rentool36.ru cdn.rentool36.ru auth.rentool36.ru;
#    return 404; # managed by Certbot
#
#}
